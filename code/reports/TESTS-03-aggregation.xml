<?xml version='1.0' encoding='UTF-8'?>
<testsuite errors="0" failures="0" name="03-aggregation.Aggregations" skipped="0" tests="3" time="0.109204"><testcase classname="03-aggregation.Aggregations" name="Get topping counts" status="passed" time="0.058614"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Get topping counts
    Given index is re-created ... passed in 0.002s
    Given all pizza is indexed ... passed in 0.040s
    When i make a dsl query ... passed in 0.016s
      """
      {
         "aggs": {
             "toppings": {
                "terms": {
                   "field": "topping"
                }
             }
         }
      }
      """
    Then the response should contain ... passed in 0.000s
      """
      {
         "aggregations":{
            "toppings":{
               "buckets":[
                  {
                     "key":"Bacon",
                     "doc_count":2
                  },
                  {
                     "key":"Ham",
                     "doc_count":2
                  },
                  {
                     "key":"Meatballs",
                     "doc_count":2
                  },
                  {
                     "key":"Beef",
                     "doc_count":1
                  },
                  {
                     "key":"Chorizo",
                     "doc_count":1
                  },
                  {
                     "key":"Marinated Beef",
                     "doc_count":1
                  },
                  {
                     "key":"Marinated Chicken",
                     "doc_count":1
                  },
                  {
                     "key":"Pepperoni",
                     "doc_count":1
                  }
               ]
            }
         }
      }
      """

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{u'hits': {u'hits': [{u'_score': 1.0, u'_type': u'pizza', u'_id': u'4', u'_source': {u'topping': [u'Pepperoni'], u'id': 4, u'weight': 590, u'name': u'Double Pepperoni'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'9', u'_source': {u'topping': [u'Ham'], u'id': 9, u'weight': 680, u'name': u'California Malibu'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'5', u'_source': {u'topping': [], u'id': 5, u'weight': 580, u'name': u'Triple Cheese'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'1', u'_source': {u'topping': [u'Marinated Chicken'], u'id': 1, u'weight': 680, u'name': u'California Sunset Chicken'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'6', u'_source': {u'topping': [u'Meatballs', u'Marinated Beef', u'Bacon'], u'id': 6, u'weight': 1015, u'name': u'Take Away Meat Lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'2', u'_source': {u'topping': [u'Bacon'], u'id': 2, u'weight': 680, u'name': u'American Bacon'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'7', u'_source': {u'topping': [u'Beef'], u'id': 7, u'weight': 610, u'name': u'New York Grilled Steak'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'3', u'_source': {u'topping': [u'Ham'], u'id': 3, u'weight': 580, u'name': u'Classic American'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'8', u'_source': {u'topping': [u'Chorizo'], u'id': 8, u'weight': 630, u'name': u'Meat lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'10', u'_source': {u'topping': [u'Meatballs'], u'id': 10, u'weight': 680, u'name': u'California Meatballs'}, u'_index': u'big-one'}], u'total': 10, u'max_score': 1.0}, u'_shards': {u'successful': 5, u'failed': 0, u'total': 5}, u'took': 2, u'aggregations': {u'toppings': {u'buckets': [{u'key': u'Bacon', u'doc_count': 2}, {u'key': u'Ham', u'doc_count': 2}, {u'key': u'Meatballs', u'doc_count': 2}, {u'key': u'Beef', u'doc_count': 1}, {u'key': u'Chorizo', u'doc_count': 1}, {u'key': u'Marinated Beef', u'doc_count': 1}, {u'key': u'Marinated Chicken', u'doc_count': 1}, {u'key': u'Pepperoni', u'doc_count': 1}], u'sum_other_doc_count': 0, u'doc_count_error_upper_bound': 0}}, u'timed_out': False}

]]>
</system-out></testcase><testcase classname="03-aggregation.Aggregations" name="Weight histogram" status="passed" time="0.026306"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Weight histogram
    Given index is re-created ... passed in 0.002s
    Given all pizza is indexed ... passed in 0.021s
    When i make a dsl query ... passed in 0.003s
      """
      {
         "aggs": {
             "by_weight": {
                "histogram": {
                   "field": "weight",
                   "interval": 100
                }
             }
         }
      }
      """
    Then the response should contain ... passed in 0.000s
      """
      {
        "aggregations": {
          "by_weight": {
             "buckets": [
              {
                 "key": 500,
                 "doc_count": 3
              },
              {
                 "key": 600,
                 "doc_count": 6
              },
              {
                 "key": 1000,
                 "doc_count": 1
              }
           ]
          }
        }
      }
      """

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{u'hits': {u'hits': [{u'_score': 1.0, u'_type': u'pizza', u'_id': u'4', u'_source': {u'topping': [u'Pepperoni'], u'id': 4, u'weight': 590, u'name': u'Double Pepperoni'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'9', u'_source': {u'topping': [u'Ham'], u'id': 9, u'weight': 680, u'name': u'California Malibu'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'5', u'_source': {u'topping': [], u'id': 5, u'weight': 580, u'name': u'Triple Cheese'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'1', u'_source': {u'topping': [u'Marinated Chicken'], u'id': 1, u'weight': 680, u'name': u'California Sunset Chicken'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'6', u'_source': {u'topping': [u'Meatballs', u'Marinated Beef', u'Bacon'], u'id': 6, u'weight': 1015, u'name': u'Take Away Meat Lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'2', u'_source': {u'topping': [u'Bacon'], u'id': 2, u'weight': 680, u'name': u'American Bacon'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'7', u'_source': {u'topping': [u'Beef'], u'id': 7, u'weight': 610, u'name': u'New York Grilled Steak'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'3', u'_source': {u'topping': [u'Ham'], u'id': 3, u'weight': 580, u'name': u'Classic American'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'8', u'_source': {u'topping': [u'Chorizo'], u'id': 8, u'weight': 630, u'name': u'Meat lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'10', u'_source': {u'topping': [u'Meatballs'], u'id': 10, u'weight': 680, u'name': u'California Meatballs'}, u'_index': u'big-one'}], u'total': 10, u'max_score': 1.0}, u'_shards': {u'successful': 5, u'failed': 0, u'total': 5}, u'took': 2, u'aggregations': {u'by_weight': {u'buckets': [{u'key': 500, u'doc_count': 3}, {u'key': 600, u'doc_count': 6}, {u'key': 1000, u'doc_count': 1}]}}, u'timed_out': False}

]]>
</system-out></testcase><testcase classname="03-aggregation.Aggregations" name="Range" status="passed" time="0.024284"><system-out>
<![CDATA[
@scenario.begin
  Scenario: Range
    Given index is re-created ... passed in 0.002s
    Given all pizza is indexed ... passed in 0.017s
    When i make a dsl query ... passed in 0.005s
      """
      {
          "aggs" : {
              "weight_ranges" : {
                  "range" : {
                      "field" : "weight",
                      "ranges" : [
                          { "to" : 500 },
                          { "from" : 500, "to" : 1000 },
                          { "from" : 1000 }
                      ]
                  }
              }
          }
      }
      """
    Then the response should contain ... passed in 0.000s
      """
      {
        "aggregations": {
          "weight_ranges": {
             "buckets": [
                {
                   "to": 500,
                   "doc_count": 0
                },
                {
                   "from": 500,
                   "to": 1000,
                   "doc_count": 9
                },
                {
                   "from": 1000,
                   "doc_count": 1
                }
             ]
          }
        }
      }
      """

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
{u'hits': {u'hits': [{u'_score': 1.0, u'_type': u'pizza', u'_id': u'4', u'_source': {u'topping': [u'Pepperoni'], u'id': 4, u'weight': 590, u'name': u'Double Pepperoni'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'9', u'_source': {u'topping': [u'Ham'], u'id': 9, u'weight': 680, u'name': u'California Malibu'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'5', u'_source': {u'topping': [], u'id': 5, u'weight': 580, u'name': u'Triple Cheese'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'1', u'_source': {u'topping': [u'Marinated Chicken'], u'id': 1, u'weight': 680, u'name': u'California Sunset Chicken'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'6', u'_source': {u'topping': [u'Meatballs', u'Marinated Beef', u'Bacon'], u'id': 6, u'weight': 1015, u'name': u'Take Away Meat Lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'2', u'_source': {u'topping': [u'Bacon'], u'id': 2, u'weight': 680, u'name': u'American Bacon'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'7', u'_source': {u'topping': [u'Beef'], u'id': 7, u'weight': 610, u'name': u'New York Grilled Steak'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'3', u'_source': {u'topping': [u'Ham'], u'id': 3, u'weight': 580, u'name': u'Classic American'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'8', u'_source': {u'topping': [u'Chorizo'], u'id': 8, u'weight': 630, u'name': u'Meat lover'}, u'_index': u'big-one'}, {u'_score': 1.0, u'_type': u'pizza', u'_id': u'10', u'_source': {u'topping': [u'Meatballs'], u'id': 10, u'weight': 680, u'name': u'California Meatballs'}, u'_index': u'big-one'}], u'total': 10, u'max_score': 1.0}, u'_shards': {u'successful': 5, u'failed': 0, u'total': 5}, u'took': 3, u'aggregations': {u'weight_ranges': {u'buckets': [{u'to': 500.0, u'to_as_string': u'500.0', u'key': u'*-500.0', u'doc_count': 0}, {u'from': 500.0, u'from_as_string': u'500.0', u'to_as_string': u'1000.0', u'doc_count': 9, u'to': 1000.0, u'key': u'500.0-1000.0'}, {u'from_as_string': u'1000.0', u'from': 1000.0, u'key': u'1000.0-*', u'doc_count': 1}]}}, u'timed_out': False}

]]>
</system-out></testcase></testsuite>